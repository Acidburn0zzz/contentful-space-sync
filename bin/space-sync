#!/usr/bin/env node
var log = require('npmlog')
var fs = require('fs')
var usage, runSpaceSync
// require either compiled or development source
try {
  runSpaceSync = require('../dist/run-space-sync')
  usage = require('../dist/usage')
  require('babel-polyfill')
} catch (err) {
  if (err.code === 'MODULE_NOT_FOUND') {
    require('babel/register')
    runSpaceSync = require('../lib/run-space-sync')
    usage = require('../lib/usage')
  } else {
    console.log(err)
    process.exit(1)
  }
}

// welcome the user and let them know what's gonna happen
log.info('Contentful Space Sync:\n' +
'Let\'s sync some content across spaces!')

var hasTokenFile
try {
  hasTokenFile = !!fs.statSync(usage.syncTokenFile)
} catch (e) {
  hasTokenFile = false
}

if (usage.opts.fresh || !hasTokenFile) {
  log.info('No previous sync token found or fresh sync requested.\n' +
  'Synchronizing fresh content from ' + usage.opts.sourceSpace + ' to ' + usage.opts.destinationSpace)
} else {
  log.info('Synchronizing content from ' + usage.opts.sourceSpace + ' to ' +
  usage.opts.destinationSpace + 'with existing token from ' + usage.syncTokenFile)
}

// Allow the user some time to cancel their action after the previous warning
setTimeout(function () {
  runSpaceSync(usage)
  .catch(function (err) {
    log.error('Failed with\n', err)
    process.exit(1)
  })
}, 3000)
